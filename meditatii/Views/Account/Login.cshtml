@using meditatii.Models
@model LoginViewModel
@{
    ViewBag.Title = "Autentificare";
}

<script src='https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit&hl=en'></script>
<script type="text/javascript">
    var isCaptchaOk = false;
    var verifyCallback = function (response) {
        isCaptchaOk = true;
    };

    var onloadCallback = function () {
        isCaptchaOk = false;
        grecaptcha.render('recaptcha', {
            'sitekey': '6LcghYIUAAAAAGTapKL9kPFy2r9KrEzqdrWov4zT',
            'callback': verifyCallback
        });
    };

    function validate() {
        //return true;
        //check captcha
        if (!isCaptchaOk) {
            alert("Please enter captcha!");
            return false;
        }
    }
    
</script>
<meditatii-app>
</meditatii-app>

<h2 style="padding-top:20px;">@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form",  onsubmit = "return validate()" }))
            {
                @Html.AntiForgeryToken()
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <p>
                    <div class="g-recaptcha" id="recaptcha"></div>
                </p>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Autentifica-te" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Nu ai un cont? Creează-ți unul.", "Register")
                </p>
                
                    <p>
                        @Html.ActionLink("Ai uitat parola?", "ForgotPassword")
                    </p>
                
            }
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
           
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
